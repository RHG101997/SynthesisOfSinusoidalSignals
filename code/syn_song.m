%% Modified by Dr. Baiload bach_fugue.mat        %% bpm = 180%load furelise.mat           %% bpm = 140% load Movie_Themes_-_James_Bond.mat;   %% bpm =140%load bach_fugue_short.matbpm = 140;bps = bpm/60;seconds_per_beat = 1/bps;seconds_per_pulse = seconds_per_beat / 4;fs = 11025; % sampling rate Part A%Multiplying the time pulse last with sampling samples_per_pulse = fs * seconds_per_pulse;%amount of keys in the song(length return size)number_of_voices = length(theVoices);%this vector conatain the notes(allocating space with zeros)number_of_notes = zeros(1,number_of_voices);%save the begining pulse of the note(array)last_pulse = zeros(1,number_of_voices);%save duration of the notelast_duration = zeros(1,number_of_voices);%% The voices might not be finished together. % loop through all the voices(may have more than one note at same time)for vloop = 1:number_of_voices   %amount of notes in current voice  number_of_notes(vloop) = length(theVoices(vloop).noteNumbers);  % if voice is bigger than 0 means there is starting pusle and duration  if number_of_notes(vloop)>0      %saving the value to the corresponding note.      last_pulse(vloop) = theVoices(vloop).startPulses(number_of_notes(vloop));      last_duration(vloop) = theVoices(vloop).durations(number_of_notes(vloop));  endend%% Fir for the last voice finishedsoundfile = zeros(1, ...            ceil( samples_per_pulse * (max(last_pulse) + max(last_duration)) ) );% this 2 dimensional loop will first loop throught each voice% in each voice another loop inside it will loop through every note in that% voice.for vloop = 1:number_of_voices % vloop index for voices  for nloop = 1:number_of_notes(vloop) %nloop for index of notes    %get total duration of the note in seconds    duration_in_seconds = seconds_per_pulse * theVoices(vloop).durations(nloop);    %reference to key2note using amplidtude of 1 since it will change later    the_tone = key2note(1,theVoices(vloop).noteNumbers(nloop),duration_in_seconds);    % get size of the array the_tone returned by key2note    tone_length = length(the_tone);    %getting the starting time of the tone    start_sample = round( (theVoices(vloop).startPulses(nloop) - 1)...        * samples_per_pulse + 1);    %Save the tone in the soundFile using start time + tone length    soundfile(start_sample:start_sample+tone_length-1) ...        = soundfile(start_sample:start_sample+tone_length-1) + the_tone;  endendspecgram(soundfile,fs,512);soundsc( soundfile, fs )